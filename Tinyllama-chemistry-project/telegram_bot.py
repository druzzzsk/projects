# -*- coding: utf-8 -*-
"""telegram_bot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G21vi8umXuGIP9Lj57AIkIJdZ1XJsXpZ
"""

from transformers import AutoTokenizer, AutoModelForCausalLM, pipeline
from peft import PeftModel

BASE_MODEL = "TinyLlama/TinyLlama-1.1B-Chat-v1.0" # –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å
LORA_PATH = "/content/tinyllama-chemistry" # –í–µ—Å–∞ LoRa –ø–æ—Å–ª–µ —Ñ–∞–π–Ω-—Ç—é–Ω–∏–Ω–≥–∞

# –ó–∞–≥—Ä—É—â–∫–∞ –º–æ–¥–µ–ª–∏
base_model = AutoModelForCausalLM.from_pretrained(
    BASE_MODEL,
    device_map="auto",
    load_in_4bit=True,
    torch_dtype="auto"
)

model = PeftModel.from_pretrained(base_model, LORA_PATH) # –ó–∞–≥—Ä—É–∑–∫–∞ LoRa –≤–µ—Å–æ–≤

tokenizer = AutoTokenizer.from_pretrained(BASE_MODEL)

pipe = pipeline("text-generation", model=model, tokenizer=tokenizer)

# –¢–æ–∫–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
BOT_TOKEN = "....."

import nest_asyncio
nest_asyncio.apply()

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_message = (
        "üëã <b>Welcome to the <i>TinyLlama Chemistry Bot</i>!</b>\n\n"
        "Ask me anything about chemistry and I‚Äôll do my best to help.\n\n"
        "üß™ <i>Example:</i> <code>What is a catalyst?</code>"
    )
    await update.message.reply_text(welcome_message, parse_mode="HTML")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text

    # "typing..." –∞–Ω–∏–º–∞—Ü–∏—è
    await update.message.chat.send_action(action="typing")

    prompt = f"<s>[INST] {user_input} [/INST]"

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
    result = pipe(prompt, max_new_tokens=200, do_sample=True, temperature=0.7)[0]['generated_text']

    # –£–¥–∞–ª–∏–º prompt –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –µ—Å–ª–∏ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è
    answer = result.replace(prompt, "").strip()[:3900]  # –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –¥–ª–∏–Ω–∞

    formatted = (
        f"<b>üì• Question:</b>\n<i>{user_input}</i>\n\n"
        f"<b>üì§ Answer:</b>\n<pre>{answer}</pre>"
    )

    await update.message.reply_text(formatted, parse_mode="HTML")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ===
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
import asyncio

async def run_bot():
    print("ü§ñ Bot is running. Write to it in Telegram!")
    await app.run_polling()

await run_bot()



